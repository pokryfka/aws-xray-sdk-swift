//===----------------------------------------------------------------------===//
//
// This source file is part of the AWSSDKSwift open source project
//
// Copyright (c) 2017-2020 the AWSSDKSwift project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
// See CONTRIBUTORS.txt for the list of AWSSDKSwift project authors
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// THIS FILE IS AUTOMATICALLY GENERATED by https://github.com/swift-aws/aws-sdk-swift/blob/main/CodeGenerator/Sources/CodeGenerator/main.swift. DO NOT EDIT.

import AWSSDKSwiftCore

/// Error enum for S3
public enum S3ErrorType: AWSErrorType {
    case bucketAlreadyExists(message: String?)
    case bucketAlreadyOwnedByYou(message: String?)
    case noSuchBucket(message: String?)
    case noSuchKey(message: String?)
    case noSuchUpload(message: String?)
    case objectAlreadyInActiveTierError(message: String?)
    case objectNotInActiveTierError(message: String?)
}

extension S3ErrorType {
    public init?(errorCode: String, message: String?) {
        var errorCode = errorCode
        if let index = errorCode.firstIndex(of: "#") {
            errorCode = String(errorCode[errorCode.index(index, offsetBy: 1)...])
        }
        switch errorCode {
        case "BucketAlreadyExists":
            self = .bucketAlreadyExists(message: message)
        case "BucketAlreadyOwnedByYou":
            self = .bucketAlreadyOwnedByYou(message: message)
        case "NoSuchBucket":
            self = .noSuchBucket(message: message)
        case "NoSuchKey":
            self = .noSuchKey(message: message)
        case "NoSuchUpload":
            self = .noSuchUpload(message: message)
        case "ObjectAlreadyInActiveTierError":
            self = .objectAlreadyInActiveTierError(message: message)
        case "ObjectNotInActiveTierError":
            self = .objectNotInActiveTierError(message: message)
        default:
            return nil
        }
    }
}

extension S3ErrorType: CustomStringConvertible {
    public var description: String {
        switch self {
        case .bucketAlreadyExists(let message):
            return "BucketAlreadyExists: \(message ?? "")"
        case .bucketAlreadyOwnedByYou(let message):
            return "BucketAlreadyOwnedByYou: \(message ?? "")"
        case .noSuchBucket(let message):
            return "NoSuchBucket: \(message ?? "")"
        case .noSuchKey(let message):
            return "NoSuchKey: \(message ?? "")"
        case .noSuchUpload(let message):
            return "NoSuchUpload: \(message ?? "")"
        case .objectAlreadyInActiveTierError(let message):
            return "ObjectAlreadyInActiveTierError: \(message ?? "")"
        case .objectNotInActiveTierError(let message):
            return "ObjectNotInActiveTierError: \(message ?? "")"
        }
    }
}
